type Grant @entity {
  id: ID!
  factoryAddress: Bytes!
  grantId: BigInt!
  grantAddress: Bytes!
  uri: Bytes!
  name: String!
  description: String!
  link: String!
  contactLink: String!
  createdBy: Bytes!
  timestamp: BigInt!
  grantees: [Bytes!]!
  amounts: [BigInt!]!
  funds: [Fund!]!
  payments: [Payment!]!
  streams: [Stream!]!
  funded: BigInt!
  recentFunds: BigInt!
  donors: [Bytes!]!
}

type Fund @entity {
  id: ID!
  grantAddress: Bytes!
  donor: Bytes!
  amount: BigInt!
  timestamp: BigInt!
  stream: Stream
}

type Payment @entity {
  id: ID!
  grantAddress: Bytes!
  grantee: Bytes!
  amount: BigInt!
  timestamp: BigInt!
}

type Stream @entity {
  id: ID!
  factoryAddress: Bytes!
  streamId: BigInt!
  streamAddress: Bytes!
  owner: Bytes!
  ownerUser: User!
  beneficiary: Bytes!
  isRevocable: Boolean!
  isRevoked: Boolean!
  revokeTime: BigInt!
  deposits: [Deposit!]!
  releases: [Release!]!
  released: BigInt!
  startTime: BigInt!
  duration: BigInt!
  timestamp: BigInt!
  funded: BigInt!
  withdrawn: BigInt!
  grant: Grant
}

type Deposit @entity {
  id: ID!
  streamAddress: Bytes!
  depositer: Bytes!
  amount: BigInt!
  timestamp: BigInt!
}

type Release @entity {
  id: ID!
  streamAddress: Bytes!
  releaser: Bytes!
  amount: BigInt!
  timestamp: BigInt!
}

type User @entity {
  id: ID!
  address: Bytes!
  grantsReceived: [Grant!]!
  grantsFunded: [Grant!]!
  streams: [Stream!]!
  funded: BigInt!
  earned: BigInt!
  pledged: BigInt!
  withdrawn: BigInt!
  streamed: BigInt!
  name: String
  emoji: String
  imageHash: String
}

# type _Schema_
#   @fulltext(
#     name: "grantSearch"
#     language: en
#     algorithm: rank
#     include: [
#       {
#         entity: "Grant"
#         fields: [
#           { name: "name" }
#           { name: "description" }
#         ]
#       }
#     ]
#   )
#   @fulltext(
#     name: "userSearch"
#     language: en
#     algorithm: rank
#     include: [{ entity: "User", fields: [{ name: "name" }] }]
#   )
